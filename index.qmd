---
title: "BU MA665 + MA666 (Fall 2024)"
---

# MA665

### Introduction
- Read the [syllabus](/Readings/MA665_MA666_Syllabus.pdf)
- Read: [Wilson et al, *Good enough practices in scientific computing*, 2017](/Readings/Wilson_2017.pdf)
- Read: [Riquelme and Gjorgjieva, *Towards readable code in neuroscience*, 2021](/Readings/Riquelme_2021.pdf)
- Code: Set up Google [Colab](https://colab.google/)
- Code: Install Python via [Anaconda](https://www.anaconda.com/)
- Code: Set up [ChatGPT](https://chat.openai.com/auth/login)
- Please complete items in the [Introduction to Python](Introduction.html)
- *Advanced*: [100 numpy exercises](https://github.com/rougier/numpy-100)
- *Advanced*: [Beautiful, Idiomatic Python](https://github.com/JeffPaine/beautiful_idiomatic_python)
- *Advanced*: Make a [pull request](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests) to the Introduction [notebook](https://github.com/Mark-Kramer/BU-MA665-MA666/blob/master/Introduction.ipynb) to add a new exercise. Be sure to use follow syntax in [quarto](https://quarto.org/) with [quarto-pyodide](https://quarto.thecoatlessprofessor.com/pyodide/)


### Integrate \& Fire Neuron
- Read:  [Abbott, Brain Res Bull, 1999.](/Readings/Abbott_1999.pdf)
- Read:  [Chapter 1, pages 5-12 @ C. Koch, Biophysics of computation, 1998.](/Readings/Koch_Chapter_1.pdf)
- Lecture [Slides](https://github.com/Mark-Kramer/BU-MA665-MA666/tree/master/Slides/IF_Lecture_1.pdf)
- Code:  [Integrate & Fire Neuron in Python](IF.html)

### Hodgkin-Huxley Neuron
- Read:  [Chapter 2, pages 25-42 @ E. Izhikevich, Dynamical Systems in Neuroscience, 2007.](/Readings/Izhikevich_Chapter_2.pdf)
- Read:  [Hodgkin-Huxley 1-page cheat sheet](/Readings/Hodgkin-Huxley_Cheat_Sheet.pdf)
- *Advanced*: [Hodgkin and Huxley, J Physiol, 1952.](/Readings/Hodgkin_Huxley_1952.pdf)
- Lecture [Slides](https://github.com/Mark-Kramer/BU-MA665-MA666/tree/master/Slides/HH_Lecture_1.pdf)
- Code:  [Hodgkin-Huxley Neuron in Python](HH.html)

### Perceptron
- Read: [Electronic Brain Teaches Itself, New York Times, 13 July 1958](/Readings/NYT_1958.pdf)
- Read: [Perceptron Tested for Photo Analysis, Aviation Weekly, 1961](/Readings/Klass_1961.pdf)
- Read: [Undercover Algorithm, O'Connor, 2022](/Readings/OConnor_2022.pdf)
- Lecture [Slides](/Slides/Perceptron_1.pdf)
- Code:  [Training a Perceptron in Python](Perceptron.html)

### Backpropagation
- Read: [Lee or Delusions of Artificail Intelligence, 2023](/Readings/Labatut_2024.pdf)
- Watch: [Inside an artificial brain](https://vimeo.com/132700334)
- Lecture [Slides](/Slides/Backpropagation_1.pdf)
- Code:  [Backpropagation in a Simple Neural Network in Python](Backpropagation.html)

### Regression
- Read: Chapter 3 of [An Introduction to Statistical Learning](https://link.springer.com/book/10.1007/978-1-4614-7138-7) (*Free via BU Library*)
- Lecture [Slides](/Slides/Regression_1.pdf)
- Code:  [Regression Example in Python](Regression.html)

---
# MA666

### Introduction to Rhythms
- Read: [Jell-O Test Finds Lifelike Signals, New York Times, 6 March 1976](/Readings/NYT_1976.pdf)
- Read: [Neuronal Oscillations in Cortical Networks](/Readings/Buzsaki_Science_2004.pdf)
- Lecture 1 [Slides](https://github.com/Mark-Kramer/BU-MA665-MA666/blob/master/Slides/Rhythms_1.pdf)
- Lecture 2 [Slides](/Slides/Rhythms_2.pdf)
- Code: [Rhythms Introduction](Rhythms_1.html)

### Analyzing Rhythms
- Read: [Kramer, SFN Short Course Document.](/Readings/Kramer_SFN_Short_Course.pdf)
- Advanced Read: [Chapter 3 @ Kramer & Eden, Case studies in neural data analysis, 2016.](/Readings/Kramer_Eden_Chapter_3.pdf)
- Advanced Read: [Chapter 4 @ Kramer & Eden, Case studies in neural data analysis, 2016.](/Readings/Kramer_Eden_Chapter_4.pdf)
- Very Advanced Read: [Chapter 4 @ Percival & Walden, Spectral Analysis for Physical Applications.](https://www.cambridge.org/core/books/spectral-analysis-for-physical-applications/A9195239A8965A2C53D43EB2D1B80A33)
- **Lecture 1** [Slides](https://github.com/Mark-Kramer/BU-MA665-MA666/blob/master/Slides/Analyzing_Rhythms_Lecture_1.pdf)
- Lecture Code 1: [Analyze Rhythms Lab 1 - Practicals](Analyzing_Rhythms_Lab_1.html)
- **Lecture 2** [Slides](https://github.com/Mark-Kramer/BU-MA665-MA666/blob/master/Slides/Analyzing_Rhythms_Lecture_2.pdf)
- Lecture Code 2a: [Analyze Rhythms Lab 2a - Autocovariance of noise](Analyzing_Rhythms_Lab_2a.html)
- Lecture Code 2b: [Analyze Rhythms Lab 2b - Autocovariance of data](Analyzing_Rhythms_Lab_2b.html)
- **Lecture 3** [Slides](https://github.com/Mark-Kramer/BU-MA665-MA666/blob/master/Slides/Analyzing_Rhythms_Lecture_3.pdf)
- Lecture Code 3: [Analyze Rhythms Lab 3 - Spikes](Analyzing_Rhythms_Lab_3.html)
- **Homework** [Spectra Homework](https://github.com/Mark-Kramer/BU-MA665-MA666/blob/master/Slides/MA666_Homework_1_Spectra.pdf)

### Coherence
- Read: [Chapter 5 @ Kramer & Eden, Case studies in neural data analysis, 2016.](/Readings/Kramer_Eden_Chapter_5.pdf)
- Read: [Fries, *A mechanism for cognitive dynamics: neuronal communication through neuronal coherence*, TINS, 2005](/Readings/Fries_TINS_2005.pdf)
- Extra Read: [Chapter 25 @ M. X. Cohen, Analyzing neural time series data, 2014.](/Readings/Cohen_Chapter_25.pdf)
- Extra Read: [Chapter 26 @ M. X. Cohen, Analyzing neural time series data, 2014.](/Readings/Cohen_Chapter_26.pdf)
- **Lecture 1** [Slides](https://github.com/Mark-Kramer/BU-MA665-MA666/blob/master/Slides/Coherence_Lecture_1.pdf)
- Lecture Code 1: [Coherence Lab 1](Coherence_Lab_Part_1.html)
- Lecture Code 2: [Coherence Lab 2](Coherence_Lab_Part_2.html)